import os
import numpy as np

"""
COMMON CONSTANT VARIABLES FOR TRAINING PIPELINE
"""
ARTIFACT_DIRECTORY: str = "artifacts"
PIPELINE_NAME: str = "network-security"
FILE_NAME: str = "phisingData.csv"
SCHEMA_FILE_PATH: str = os.path.join("data_schema", "schema.yaml")
TRAIN_FILE_NAME: str = "train.csv"
TEST_FILE_NAME: str = "test.csv"
TARGET_COLUMN: str = "Result"


"""
DATA INGESTION RELATED CONSTANTS
"""
DATA_INGESTION_DATABASE_NAME: str = "machine_learning_db"
DATA_INGESTION_COLLECTION_NAME: str = "phishing_data"
DATA_INGESTION_DIRECTORY_NAME: str = "data_ingestion"
DATA_INGESTION_FEATURE_STORE_DIRECTORY: str = "feature_store"
DATA_INGESTION_INGESTED_DIRECTORY: str = "ingested"
DATA_INGESTION_TRAIN_TEST_SPLIT_RATIO: float = 0.2


"""
DATA VALIDATION RELATED CONSTANTS
"""
DATA_VALIDATION_DIRECTORY_NAME: str = "data_validation"
DATA_VALIDATION_VALIDATED_DIRECTORY: str = "validated"
DATA_VALIDATION_INVALIDATED_DIRECTORY: str = "invalidated"
DATA_VALIDATION_DRIFT_REPORT_DIRECTORY: str = "drift_report"
DATA_VALIDATION_DRIFT_REPORT_NAME: str = "report.yaml"


"""
DATA TRANSFORMATION RELATED CONSTANTS
"""
DATA_TRANSFORMATION_DIRECTORY_NAME: str = "data_transformation"
DATA_TRANSFORMATION_TRANSFORMED_DATA_DIRECTORY: str = "transformed"
DATA_TRANSFORMATION_PREPROCESSOR_DIRECTORY: str = "preprocessor"
DATA_TRANSFORMATION_TRAIN_FILE_PATH: str = "train.npy"
DATA_TRANSFORMATION_TEST_FILE_PATH: str = "test.npy"
DATA_TRANSFORMATION_PREPROCESSOR_FILE_NAME = "preprocessor.pkl"
# KNN-Imputer params
DATA_TRANSFORMATION_IMPUTER_PARAMS: dict = {
    "missing_values": np.nan,
    "n_neighbors": 3,
    "weights": "uniform",
}


"""
MODEL TRAINER RELATED CONSTANTS
"""
MODEL_TRAINER_DIRECTORY_NAME: str = "model_trainer"
MODEL_TRAINER_TRAINED_MODEL_DIRECTORY: str = "trained_model"
MODEL_TRAINER_TRAINED_MODEL_NAME: str = "model.pkl"
MODEL_TRAINER_EXPECTED_SCORE: float = 0.6
MODEL_TRAINER_OVER_FIITING_UNDER_FITTING_THRESHOLD: float = 0.05
TRAINING_BUCKET_NAME: str = "netwworksecurity"
